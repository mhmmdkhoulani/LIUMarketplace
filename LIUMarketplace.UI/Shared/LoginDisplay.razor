@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation

@using System.Security.Claims

<AuthorizeView>
    <Authorized>
        <MudMenu Icon="@Icons.Material.Filled.Settings" Direction="Direction.Right" OffsetY="true">
            <MudMenuItem OnClick="LogOutAsync">Logout</MudMenuItem>
        </MudMenu>
        <MudText Typo="Typo.h6">@context.User.FindFirst(ClaimTypes.GivenName).Value</MudText>

    </Authorized>

    <NotAuthorized>
        <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Secondary" OnClick='() => Navigation.NavigateTo("/auth/login")' />
    </NotAuthorized>
</AuthorizeView>


@code {

    private async Task LogOutAsync()
    {
        await Storage.RemoveItemAsync("access_token");
        await Storage.RemoveItemAsync("expiry_date");

        await AuthenticationStateProvider.GetAuthenticationStateAsync();

        Navigation.NavigateTo("/auth/login");
    }

}
